generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model cargos {
  id           Int            @id @default(autoincrement()) @db.UnsignedInt
  cargo        String         @unique(map: "cargo") @db.VarChar(25)
  funcionarios funcionarios[]
}

model clientes {
  id                 Int                  @id @default(autoincrement()) @db.UnsignedInt
  pessoa             String               @db.Char(1)
  cnpj_cpf           String               @unique(map: "cnpj_cpf") @db.VarChar(14)
  email              String?              @unique(map: "email") @db.VarChar(100)
  password           String?              @default("") @db.VarChar(100)
  nome               String               @db.VarChar(80)
  fantasia           String               @db.VarChar(80)
  ins_est_rg         String?              @db.Char(18)
  segmento_id        Int                  @default(1) @db.UnsignedInt
  cheque_nominal     Boolean              @default(false)
  cheque_cruzado     Boolean              @default(false)
  fornecedor         Boolean?             @default(false)
  proprietario       Boolean?             @default(false)
  socio              Boolean?             @default(false)
  funcionario        Boolean?             @default(false)
  agencia            Boolean?             @default(false)
  segmentos          segmentos            @relation(fields: [segmento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "clientes_fk2")
  enderecos_clientes enderecos_clientes[]
  inventarios        inventarios[]

  @@index([segmento_id], map: "clientes_fk2")
}

model empresas {
  id                                                     Int            @id @default(autoincrement()) @db.UnsignedInt
  cnpj                                                   String         @unique(map: "cnpj") @db.VarChar(14)
  empresa                                                String         @db.VarChar(50)
  fantasia                                               String         @db.VarChar(50)
  ativo                                                  Boolean?       @default(true)
  CEP                                                    String?        @db.Char(10)
  Endereco                                               String         @db.VarChar(40)
  Numero                                                 String         @db.Char(5)
  Complemento                                            String?        @db.VarChar(20)
  Bairro                                                 String         @db.VarChar(30)
  cidade                                                 String?        @db.VarChar(30)
  uf                                                     String?        @db.Char(2)
  funcionarios                                           funcionarios[]
  inventarios_inventarios_id_EmpresaNegocioToempresas    inventarios[]  @relation("inventarios_id_EmpresaNegocioToempresas")
  inventarios_inventarios_id_EmpresaContaPagarToempresas inventarios[]  @relation("inventarios_id_EmpresaContaPagarToempresas")
}

model enderecos_clientes {
  id          Int      @default(autoincrement()) @db.UnsignedInt
  cliente_id  Int      @db.UnsignedInt
  cep         String?  @db.Char(10)
  endereco    String?  @db.VarChar(50)
  numero      String?  @db.Char(5)
  complemento String?  @db.VarChar(20)
  bairro      String?  @db.VarChar(30)
  cidade      String?  @db.VarChar(30)
  uf          String?  @db.Char(2)
  clientes    clientes @relation(fields: [cliente_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "endereco_Clientes_fk1")

  @@id([id, cliente_id])
  @@index([cliente_id], map: "endereco_Clientes_fk1")
}

model funcionarios {
  id            Int       @id @default(autoincrement()) @db.UnsignedInt
  cpf           String    @unique(map: "cpf") @db.VarChar(14)
  nome          String    @db.VarChar(80)
  ativo         Boolean?  @default(true)
  data_admissao DateTime? @db.Date
  data_demissao DateTime? @db.Date
  empresa_id    Int?      @db.UnsignedInt
  cargo_id      Int?      @db.UnsignedInt
  login         String?   @unique(map: "login") @db.VarChar(10)
  trocar_senha  Boolean?  @default(true)
  senha         String?   @db.VarChar(100)
  data_senha    DateTime? @db.Date
  nivel         Int?      @db.UnsignedInt
  CEP           String?   @db.Char(10)
  Endereco      String?   @db.VarChar(50)
  Numero        String?   @db.Char(5)
  complemento   String?   @db.VarChar(20)
  Bairro        String?   @db.VarChar(30)
  cidade        String?   @db.VarChar(30)
  uf            String?   @db.Char(2)
  empresas      empresas? @relation(fields: [empresa_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "funcionarios_fk0")
  cargos        cargos?   @relation(fields: [cargo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "funcionarios_fk2")

  @@index([empresa_id], map: "funcionarios_fk0")
  @@index([cargo_id], map: "funcionarios_fk2")
}

model segmentos {
  id       Int        @id @default(autoincrement()) @db.UnsignedInt
  segmento String     @unique(map: "segmento") @db.VarChar(40)
  clientes clientes[]
}

model dimensoes {
  id          Int           @id @default(autoincrement()) @db.UnsignedInt
  dimensao    String?       @db.VarChar(25)
  inventarios inventarios[]
}

model inventarios {
  id                                                  Int             @id @db.UnsignedInt
  id_Proprietario                                     Int             @db.UnsignedInt
  id_EmpresaNegocio                                   Int             @default(1) @db.UnsignedInt
  id_EmpresaContaPagar                                Int             @default(1) @db.UnsignedInt
  id_TipoInventario                                   Int             @default(1) @db.UnsignedInt
  Localizacao                                         String?         @db.VarChar(100)
  ativo                                               Boolean?        @default(true)
  id_dimensao                                         Int?            @default(0) @db.UnsignedInt
  cidade                                              String?         @db.VarChar(30)
  uf                                                  String?         @db.Char(2)
  Face                                                String?         @db.VarChar(20)
  Urbanizado                                          String?         @db.Char(1)
  Iluminado                                           String?         @db.Char(1)
  LinkGoogleMaps                                      String?         @db.VarChar(50)
  clientes                                            clientes        @relation(fields: [id_Proprietario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "inventarios_fk1")
  empresas_inventarios_id_EmpresaNegocioToempresas    empresas        @relation("inventarios_id_EmpresaNegocioToempresas", fields: [id_EmpresaNegocio], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "inventarios_fk2")
  empresas_inventarios_id_EmpresaContaPagarToempresas empresas        @relation("inventarios_id_EmpresaContaPagarToempresas", fields: [id_EmpresaContaPagar], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "inventarios_fk3")
  tipoinventarios                                     tipoinventarios @relation(fields: [id_TipoInventario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "inventarios_fk4")
  dimensoes                                           dimensoes?      @relation(fields: [id_dimensao], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "inventarios_fk5")

  @@index([id_Proprietario], map: "inventarios_fk1")
  @@index([id_EmpresaNegocio], map: "inventarios_fk2")
  @@index([id_EmpresaContaPagar], map: "inventarios_fk3")
  @@index([id_TipoInventario], map: "inventarios_fk4")
  @@index([id_dimensao], map: "inventarios_fk5")
}

model tipoinventarios {
  id          Int           @id @default(autoincrement()) @db.UnsignedInt
  inventario  String?       @db.VarChar(50)
  inventarios inventarios[]
}

model bisemanas {
  id       Int      @id @default(autoincrement()) @db.UnsignedInt
  numero   String   @db.Char(2)
  ano      String   @db.Char(4)
  dtInicio DateTime @db.Date
  dtFinal  DateTime @db.Date
}
